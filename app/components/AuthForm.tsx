'use client';

import { useState } from 'react';
import { signIn } from 'next-auth/react';

export default function AuthForm() {
  const [isLogin, setIsLogin] = useState(true);
  const [formData, setFormData] = useState({
    email: '',
    password: '',
    name: '',
  });

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (isLogin) {
      // –í—Ö–æ–¥
      const result = await signIn('credentials', {
        redirect: false,
        email: formData.email,
        password: formData.password,
      });
      
      if (result?.error) {
        alert(result.error);
      }
    } else {
      // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
      try {
        const res = await fetch('/api/auth/register', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(formData),
        });
        
        if (res.ok) {
          // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –≤—Ö–æ–¥
          await signIn('credentials', {
            email: formData.email,
            password: formData.password,
          });
        } else {
          const data = await res.json();
          alert(data.error);
        }
      } catch (error) {
        alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
      }
    }
  };

  return (
    <div className="p-6 bg-gradient-to-r from-purple-500 to-blue-600 rounded-xl shadow-xl">
      <h2 className="text-2xl font-bold text-white mb-6">
        {isLogin ? 'üéÆ –í—Ö–æ–¥ –≤ –∏–≥—Ä—É' : 'üéÆ –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞'}
      </h2>
      
      <form onSubmit={handleSubmit} className="space-y-4">
        {!isLogin && (
          <input
            type="text"
            value={formData.name}
            onChange={(e) => setFormData({ ...formData, name: e.target.value })}
            className="game-input w-full"
            placeholder="–ò–º—è –≥–µ—Ä–æ—è..."
            required
          />
        )}
        
        <input
          type="email"
          value={formData.email}
          onChange={(e) => setFormData({ ...formData, email: e.target.value })}
          className="game-input w-full"
          placeholder="Email..."
          required
        />
        
        <input
          type="password"
          value={formData.password}
          onChange={(e) => setFormData({ ...formData, password: e.target.value })}
          className="game-input w-full"
          placeholder="–ü–∞—Ä–æ–ª—å..."
          required
        />
        
        <button
          type="submit"
          className="w-full bg-green-500 hover:bg-green-600 game-button text-white font-medium"
        >
          {isLogin ? '–í–æ–π—Ç–∏' : '–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç'}
        </button>
        
        <button
          type="button"
          onClick={() => setIsLogin(!isLogin)}
          className="w-full bg-transparent border border-white/20 hover:bg-white/10 game-button text-white"
        >
          {isLogin ? '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –≥–µ—Ä–æ—è' : '–£ –º–µ–Ω—è —É–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç'}
        </button>
      </form>
    </div>
  );
} 